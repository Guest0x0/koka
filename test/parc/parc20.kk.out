module parc/parc20
import std/core/types = std/core/types = "";
import std/core = std/core = "";
// TRICKY: need to dup x because xs is consumed by Cons-ctor
pub fun test : (xs : list<int>) -> list<int>
 = fn(xs: list<int>){
 match (xs) {
 (std/core/types/Cons(((@skip std/core/types/@Box((x: int)) : @Box ) as @box-xxx: @Box), (@pat@xxx: list<int>)) : list<int> )
 -> val _ : int
 = std/core/types/@dup(x);
 std/core/types/Cons((std/core/types/@box(x)), xs);
 (@skip std/core/types/Nil() : (list<int>) )
 -> std/core/types/Nil;
 };
 };